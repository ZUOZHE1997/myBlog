const l=JSON.parse('{"key":"v-1911af4c","path":"/docs/browser-principle/liulanqizhongdewangluo/kuazhanjiaobengongjiXSS：weishimecookiezhongyouhttpOnlyshuxing/","title":"跨站脚本攻击XSS：为什么cookie中有httpOnly属性","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"什么是 XSS 攻击","slug":"什么是-xss-攻击","link":"#什么是-xss-攻击","children":[]},{"level":2,"title":"恶意脚本是怎么注入的","slug":"恶意脚本是怎么注入的","link":"#恶意脚本是怎么注入的","children":[{"level":3,"title":"1.存储型 XSS 攻击","slug":"_1-存储型-xss-攻击","link":"#_1-存储型-xss-攻击","children":[]},{"level":3,"title":"2.反射型 XSS 攻击","slug":"_2-反射型-xss-攻击","link":"#_2-反射型-xss-攻击","children":[]},{"level":3,"title":"3.基于 DOM 的 XSS 攻击","slug":"_3-基于-dom-的-xss-攻击","link":"#_3-基于-dom-的-xss-攻击","children":[]}]},{"level":2,"title":"如何阻止 XSS 攻击","slug":"如何阻止-xss-攻击","link":"#如何阻止-xss-攻击","children":[{"level":3,"title":"1.服务器对输入脚本进行过滤或转码","slug":"_1-服务器对输入脚本进行过滤或转码","link":"#_1-服务器对输入脚本进行过滤或转码","children":[]},{"level":3,"title":"2.充分使用 CSP","slug":"_2-充分使用-csp","link":"#_2-充分使用-csp","children":[]},{"level":3,"title":"3.使用 HttpOnly 属性","slug":"_3-使用-httponly-属性","link":"#_3-使用-httponly-属性","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1689054917000,"updatedTime":1689054917000,"contributors":[{"name":"liulin","email":"iambrysonlau@gmail.com","commits":1}]},"filePathRelative":"docs/browser-principle/浏览器中的网络/跨站脚本攻击XSS：为什么cookie中有httpOnly属性/index.md"}');export{l as data};
