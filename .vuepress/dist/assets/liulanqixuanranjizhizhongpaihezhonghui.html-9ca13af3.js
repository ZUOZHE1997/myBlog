import{_ as i,o as l,c as a,a as e}from"./app-ec29cce2.js";const n={},t=e('<p>浏览器渲染机制大致流程:</p><ol><li>解析阶段</li></ol><p>浏览器收到返回的页面开始解析:</p><ul><li>构建 DOM 树,HTML 标记包括开始和结束标记,以及属性名和值</li><li>处理 CSS 并构建 CSSOM 树,CSSOM 树包括来自用户代理样式表的样式</li><li>javascript 编译,当 CSS 被解析并创建 CSSOM 时,其他资源,包括 javascript 文件正在下载,javascript 被解释,编译,解析和执行</li></ul><ol start="2"><li>渲染阶段</li></ol><ul><li>将 DOM 和 CSSOM 组合成一个 Render 树,计算样式树或渲染树从 DOM 树的根开始构建,遍历每个可见节点</li><li>在渲染树上运行布局以计算每个节点的几何体.布局是确定呈现树中所有节点的宽度,高度和位置,以及确定页面上每个对象的大小和位置的过程(布局阶段)</li><li>将各个节点绘制到屏幕上</li></ul><h3 id="重绘与重排" tabindex="-1"><a class="header-anchor" href="#重绘与重排" aria-hidden="true">#</a> 重绘与重排</h3><p>当通过 css 或者 js 更新了几何位置属性就会造成重排,浏览器会重新布局.</p><p>通过更新元素的绘制属性(可见性),比如背景色,边框属性,会造成重绘</p><p>重拍一定会引起重绘,但是重绘不一定引起重排</p><p>什么会触发重排和重绘？</p><ul><li>添加、删除、更新 DOM 节点都会触发重排</li><li>使用 display: none 隐藏元素会触发重排和重绘</li><li>使用 visibility:hidden 只会引起重绘，因为没有布局和位置的变更</li><li>移动节点、添加动画都会触发重排和重绘</li><li>改变浏览器窗口大小会触发重排</li><li>更改元素字体大小会触发重排</li><li>添加或者删除样式会触发重排和重绘</li><li>操作 DOM 脚本是昂贵的操作，因为每次 document 或者 document 的部分改变时，它们都会重新计算。</li></ul>',12),o=[t];function c(s,r){return l(),a("div",null,o)}const p=i(n,[["render",c],["__file","liulanqixuanranjizhizhongpaihezhonghui.html.vue"]]);export{p as default};
